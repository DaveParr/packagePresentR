Packges: Structure and Tools
========================================================
author: David Parr
date: `r format(Sys.time(), "%Y-%b-%d")`
autosize: true

What is a package?
========================================================

> A package is a template or set of conventions that structures your code. 

from [Devtools Readme](https://cran.r-project.org/web/packages/devtools/README.html)

This is installed locally using 

`install.packages("myPackage")`

The package is then loaded with 

`library(myPackage)`

Why?
========================================================

> This not only makes sharing code easy, it reduces the time and effort required to complete you project: following a template removes the need to have to think about how to organize things and paves the way for the creation of standardised tools that can further accelerate your progress.

from [Devtools Readme](https://cran.r-project.org/web/packages/devtools/README.html)

What does a package need?
========================================================

## Definately

- `NAMESPACE`
- `DESCRIPTION`
- `R/`
- `man/`

## Optionally

- `data/`
- `tests/`
- `vignettes/`
- `exec/`
- `inst/`
- `probably many more/`

The Traditional Start
========================================================

## `Utils`

## The Function

```{r, eval=FALSE}
package.skeleton()
```

### The Output

- `DESCRIPTION`
- `NAMESPACE`
- `/man`
- `/R`

### The Approach

This function will inspect the global environment and attempt to compile source code and datasets from the objects within.

### The Philosphy

Any R stuff you are currently working on should be a package,and only R stuff

The Modern Start
========================================================

## `devtools`

## The Function

```{r, eval=FALSE}
create("myPackage")
```

### The Output

- `DESCRIPTION`
- `NAMESPACE`
- `/R`
- `myPackage.Rproj`
- `.gitignore`
- `.Rbuildignore`

### The Approach

This function gives you all the things devtools wants you to work with; a project file, git, RStudio build tools, but none of the random stuff you currently have in your session.

## The Philosphy

Build the devtools way, with version control and the RStudio IDE

